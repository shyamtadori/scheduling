continue
@pilots_hitch = PilotsHitch.find(params[:id])
@pilots_hitch = PilotHitch.find(params[:id])
@pilots_hitch
continue
rule_params
continue
rule_params
continue
mission_type_params[:rule_ids]
params[:mission_type][:rule_ids] = mission_type_params[:rule_ids] + @mission_type.rules.pluck(:rule_id).map(&:to_s)
mission_type_params[:rule_ids]
mission_type_params[:rule_ids] = mission_type_params[:rule_ids] + @mission_type.rules.pluck(:rule_id).map(&:to_s)
mission_type_params[:rule_ids] + @mission_type.rules.pluck(:rule_id).map(&:to_s)
@mission_type.rules.pluck(:rule_id)
mission_type_params[:rule_ids]
next
continue
mission_type_params[:rule_ids] = mission_type_params[:rule_ids] + @mission_type.rules.pluck(:rule_id).map(&:to_s)
mission_type_params[:rule_ids] + @mission_type.rules.pluck(:rule_id).map(&:to_s)
mission_type_params[:rule_ids] + @mission_type.rules.pluck(:rule_id).map(:&to_s)
mission_type_params[:rule_ids] + @mission_type.rules.pluck(:rule_id).map(:&.to_s)
mission_type_params[:rule_ids] + @mission_type.rules.pluck(:rule_id)
@mission_type.rules.pluck(:rule_id)
mission_type_params[:rule_ids]
next
mission_type_params[:rule_ids]
next
mission_type_params
continue
mission_type_params
continue
mission_type_params
continue
mission_type_params
continue
mission_type_params
continue
mission_type_params
continue
mission_type_params
@pilots_hitches
@pilots_hitches.first
exit
@work_days.first
exit
@work_days.map(&:to_date)
@work_days.first.to_date
@work_days.first
@work_days
day.to_date
day
continue
 @work_days.include? day.utc.beginning_of_day
 @work_days.include? day.utc
day
continue
day
continue
 @work_days.include? day.utc
day.to_utc.beginning_of_day
day.beginning_of_day
 @work_days.include? day.beginning_of_day
 @work_days.first
 @work_days.include? day
day
continue
@work_days
continue
next
warden
session
warden.session
next
step
next
Rails.env.development?
continue
contniue
params
exit
contniue
@hitches.count
@hitches
continue
current_user
continue
current_user
continue
bootstrap_class_for(msg_type.to_sym)
bootstrap_class_for(msg_type)
msg_type
continue
msg_type
continue
flash
msg_type
continue
flash
msg_type
exit
continue
flash
msg_type
continue
exit
step
@devise_mapping
step
